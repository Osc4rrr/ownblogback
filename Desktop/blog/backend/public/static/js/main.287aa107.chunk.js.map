{"version":3,"sources":["types/types.js","helpers/fetch.js","actions/user.js","actions/auth.js","components/animations/LoginAnimation.js","hooks/useForm.js","components/auth/LoginForm.js","components/auth/LoginScreen.js","components/animations/RegisterAnimation.js","components/auth/RegisterForm.js","components/auth/RegisterScreen.js","actions/posts.js","components/ui/Loader.js","components/blog/PostItem.js","components/blog/Posts.js","components/blog/HomeScreen.js","components/blog/PostDetails.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/ui/Navbar.js","components/blog/NewPostForm.js","components/blog/NewPost.js","components/blog/PostUserItems.js","components/blog/UpdateUserForm.js","components/blog/ProfileScreen.js","components/blog/EditPostForm.js","components/blog/PostEdit.js","routers/AppRouter.js","reducers/authReducer.js","reducers/postReducer.js","reducers/userReducer.js","reducers/rootReducer.js","store/store.js","BlogApp.js","index.js"],"names":["types","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchImageWithoutToken","file","formData","FormData","append","fetchWithToken","token","localStorage","getItem","userLoadingDetails","posts","type","payload","userStartLoadingPosts","dispatch","a","resp","json","userLoadingPosts","console","log","postDeleting","id","postUpdating","post","checkingFinish","login","user","startLogout","clear","logout","LoginAnimation","src","background","speed","style","width","height","loop","autoplay","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginForm","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","classes","makeStyles","theme","root","margin","spacing","button","textField","marginTop","useStyles","className","noValidate","autoComplete","onSubmit","e","email","password","preventDefault","success","setItem","uid","Swal","fire","message","TextField","label","variant","onChange","Button","color","Typography","display","gutterBottom","to","LoginScreen","Grid","container","item","sm","RegisterAnimation","RegisterForm","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","startRegister","RegisterScreen","postUploading","postLoaded","postSetActive","justifyContent","alignItems","Loader","mode","maxWidth","posted","btnMore","btnStyle","backgroundColor","padding","borderRadius","textDecoration","fontFamily","fontSize","textTransform","PostItem","props","history","useHistory","Card","CardMedia","component","alt","image","title","CardContent","description","moment","format","onClick","push","flexWrap","Posts","useEffect","useSelector","state","length","map","HomeScreen","mediaImg","border","goBackLink","position","left","PostDetails","postSelected","activePost","fromNow","PrivateRoute","isAuthenticated","Component","rest","PublicRoute","flexGrow","boxShadow","menuButton","marginRight","titleAuth","linkTitle","Navbar","auth","AppBar","Toolbar","formContainer","breakpoints","down","form","flexDirection","NewPostForm","uploadingImage","setUploadingImage","imageUrl","setImageUrl","formNewPostValues","handleNewPostInputChange","handleUploadImage","files","imagePath","Date","toISOString","slice","replace","getState","_id","postStartUploading","multiline","rows","hidden","href","rel","useStyle","newPostContainer","titleContainer","fontWeight","NewPost","tableImage","PostUserItems","handleDeletePost","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","postStartDeleting","TableRow","TableCell","profileScreenContainer","titleProfileScreen","dataPostContainer","titlesPostData","myDataContainer","myDataTextField","tableDataD","tableData","UpdateUserForm","userDetails","Object","keys","setstate","event","password2","userDetailsStartUpdating","ProfileScreen","userPosts","TableContainer","Paper","Table","TableHead","TableBody","EditPostForm","postStartUpdating","PostEdit","match","params","AppRouter","checking","exact","path","rootReducer","combineReducers","action","p","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","BlogApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.287aa107.chunk.js","sourcesContent":["export const types = {\n\n    authChecking: \"[auth] Checking Login State\",\n    authCheckingFinish: \"[auth] Checking Finish Login State\",\n\n    authStartLogin: \"[auth] Start Login\",\n    authLogin: \"[auth] Login\",\n\n    authStartRegister: \"[auth] Start Register\",\n    authStartTokenRenew: \"[auth] Start Token Renew\",\n    \n    authRegister: \"[auth] Register\",\n    authLogout: \"[auth] Logout\", \n\n    userStartLoadingDetails: \"[user] Start Loading Details\",\n    userLoadingDetails: \"[user] Loading Details\",\n    userStartLoadingPosts: \"[user] Start Loading Posts\", \n    userLoadingPosts: \"[user] Loading Posts\",\n\n    userDetailsStartUpdating:\"[user] User Details Start Updating\",\n    userDetailsUpdating:\"[user] User Details Updating\",\n    userClearDetails: \"[user] Clear Details\",\n\n    userPostEditLoading: \"[user] Post Edit Loading\",\n\n    postsLoaded: \"[post] Loaded Posts\", \n    postChecking: \"[post] Checking Posts\", \n\n    postSetActive: \"[post] Set Active\", \n    postClearActive: \"[post] Clear Active Post\",\n    postStartUpdating: \"[post] Start Updating\", \n    postUpdating: \"[post] Post Updating\", \n\n    postStartDeleting: \"[post] Start Deleting\", \n    postDeleting: \"[post] Deleting\",\n    \n    postStartUploading: \"[post] Start Uploading\", \n    postUploading: \"[post] Uploading\"\n\n}","\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchWithoutToken = (endpoint, data, method=\"GET\") => {\n    const url = `${baseUrl}/${endpoint}`; \n\n    if(method === \"GET\"){\n        return fetch(url); \n    }else{\n        return fetch(url, {\n            method, \n            headers: {\n                \"Content-Type\": \"application/json\"\n            }, \n            body: JSON.stringify(data)\n        })\n    }\n}\n\nconst fetchImageWithoutToken = (endpoint, file, method=\"GET\") => {\n    const url = `${baseUrl}/${endpoint}`; \n\n    let formData = new FormData(); \n    formData.append(\"image\", file); \n\n    if(method === \"GET\"){\n        return fetch(url); \n    }else{\n        return fetch(url, {\n            method, \n            body: formData\n        })\n    }\n}\n\nconst fetchWithToken = (endpoint, data, method=\"GET\") => {\n    const url = `${baseUrl}/${endpoint}`; \n    const token = localStorage.getItem(\"token\") || \"\";\n\n    if(method === \"GET\"){\n        return fetch(url, {\n            method,\n            headers: {\n                \"x-token\": token\n            }\n        }); \n    }else{\n        return fetch(url, {\n            method, \n            headers: {\n                \"Content-Type\": \"application/json\", \n                \"x-token\": token\n            }, \n            body: JSON.stringify(data)\n        })\n    }\n}\n\nexport {\n    fetchWithoutToken, \n    fetchWithToken, \n    fetchImageWithoutToken\n}","import Swal from \"sweetalert2\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { login } from \"./auth\";\n\n\nexport const userStartLoadingDetails = () => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchWithToken(\"auth/userDetails\"); \n            const body = await resp.json(); \n\n            if(body.success){\n                dispatch(userLoadingDetails(body.user));\n            }\n        } catch (error) {\n            console.log(error); \n        }\n        \n    }\n}\n\nconst userLoadingDetails = (posts) => ({\n    type: types.userLoadingDetails, \n    payload: posts\n}); \n\nexport const userStartLoadingPosts = () => {\n    return async(dispatch) => {\n        try {\n            const resp = await fetchWithToken(\"auth/userPosts\"); \n            const body = await resp.json();  \n\n            dispatch(userLoadingPosts(body.posts)); \n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const postStartUpdating = (post) => {\n    return async(dispatch) => {\n        try {\n\n            const resp = await fetchWithToken(`posts/${ post.id }`, post, 'PUT' );\n            const body = await resp.json();\n\n            // console.log(body.post);\n\n            if(body.success){\n                Swal.fire(\"Success\",\"Post was updated\", \"success\"); \n            }\n            dispatch(postUpdating(body.post));\n            // dispatch(userStartLoadingPosts());\n        } catch (error) {\n            Swal.fire(\"Error\", \"Hubo un error\" + error, \"error\");\n            console.log(error);\n        }\n    }\n}\n\nexport const postStartDeleting = (id) => {\n    return async(dispatch) => {\n        try {\n            const resp = await fetchWithToken(`posts/${ id }`,{}, 'DELETE' );\n            const body = await resp.json();\n\n            if(body.success){\n                Swal.fire(\"Success\", \"Post was deleted\", \"success\");\n            }\n            dispatch(postDeleting(id));\n        } catch (error) {\n            Swal.fire(\"Error\", \"It was an error\", \"error\");\n            console.log(error); \n        }\n    }\n}\n\nconst postDeleting = (id) => ({\n    type: types.postDeleting, \n    payload: id\n})\n\nexport const postUpdating = (post) => ({\n    type: types.postUpdating, \n    payload: post\n})\n\nconst userLoadingPosts = (posts) => ({\n    type: types.userLoadingPosts, \n    payload: posts\n})\n\nexport const userDetailsStartUpdating = (user) => {\n    return async(dispatch) => {\n        try {\n            const resp = await fetchWithToken(`auth/${ user.id }`,user, 'PUT' );\n            const body = await resp.json();\n\n            if(body.success){\n                console.log(body);\n                Swal.fire(\"Success\", \"User was updated\", \"success\");\n                dispatch(userLoadingDetails({\n                    _id: body.uid, \n                    name: body.name, \n                    email: body.email\n                }));\n\n                localStorage.setItem(\"token\", body.token); \n                \n\n                dispatch(login({\n                    uid: body.uid, \n                    name: body.name\n                })); \n\n                // dispatch(startChecking());\n            }else{\n                \n                Swal.fire(\"Error\", body.message, \"error\"); \n            }\n        } catch (error) {\n            Swal.fire(\"Error\", error, \"error\");\n            console.log(error); \n        }\n    }\n}\n\nexport const userClearDetails = () => ({\n    type: types.userClearDetails \n})","import {types} from \"../types/types\"; \nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\nimport Swal from \"sweetalert2\";\nimport { userClearDetails } from \"./user\";\n\nexport const startLogin = (email, password) => {\n\n    return async(dispatch) => {\n        const resp = await fetchWithoutToken(\"auth/login\", {email, password}, \"POST\");\n        const body = await resp.json(); \n\n        if(body.success){\n            localStorage.setItem(\"token\", body.token); \n            //localStorage.setItem(\"token-init-date\", new Date.getTime());\n\n            dispatch(login({\n                uid: body.uid, \n                name: body.name\n            })); \n        }else{\n            Swal.fire(\"Error\", body.message, \"error\")\n        }\n    }\n}\n\nexport const startRegister = (user) => {\n\n    return async (dispatch) => {\n\n        const resp = await fetchWithoutToken(\"auth/register\", user, \"POST\");\n        const body = await resp.json(); \n\n        if(body.success){\n            localStorage.setItem(\"token\", body.token); \n\n            dispatch(login({\n                uid: body.uid, \n                name: body.name\n            })); \n        }else{\n            Swal.fire(\"Error\", body.message, \"error\")\n        }\n\n        \n    }\n}\n\nexport const startChecking = () => {\n\n    return async (dispatch)=> {\n        const resp = await fetchWithToken(\"auth/renew\");\n        const body = await resp.json(); \n\n        if(body.success){\n            localStorage.setItem(\"token\", body.token); \n\n            dispatch(login({\n                uid: body.uid, \n                name: body.name\n            })); \n        }else{\n            Swal.fire(\"Error\", body.message, \"error\")\n            dispatch(checkingFinish());\n        }\n    }\n}\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n})\n\nexport const login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(userClearDetails());\n        dispatch(logout()); \n    }\n}\n\nconst logout = () => ({\n    type: types.authLogout\n})","import React from 'react'\n\nconst LoginAnimation = () => {\n    return (\n        <div>\n            <lottie-player src=\"https://assets4.lottiefiles.com/packages/lf20_q5pk6p1k.json\"  background=\"transparent\"  speed=\"1\"  style={{width: \"300px\", height: \"300px\"}}  loop autoplay></lottie-player>\n        </div>\n    )\n}\n\nexport default LoginAnimation\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react'; \nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport LoginAnimation from \"../animations/LoginAnimation\";\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch } from 'react-redux';\nimport { startLogin } from '../../actions/auth';\n\nconst LoginForm = () => {\n\n    const dispatch = useDispatch();\n\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail: \"\", \n        lPassword: \"\"\n    }); \n\n    const {lEmail, lPassword} = formLoginValues; \n\n    const handleLogin = (e) =>{\n        e.preventDefault(); \n        dispatch(startLogin(lEmail, lPassword)); \n    }\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          '& > *': {\n            margin: theme.spacing(0),\n            width: '25ch',\n          },\n        },\n        button: {\n            width:\"100%\",\n            height:\"45px\",\n            margin:\"20px 0px\"\n        },\n        textField:{\n            width:\"100%\",\n            marginTop:\"20px\",\n            height:\"45px\", \n            margin:\"5px 0px\"\n        }\n        \n    }));\n\n    const classes = useStyles();\n    return (\n        <div className=\"form-log\">\n            <LoginAnimation/>\n            <form \n                className={classes.root} \n                noValidate \n                autoComplete=\"off\"\n                onSubmit={handleLogin}\n            >\n                <TextField \n                    className={classes.textField} \n                    id=\"lEmail\" \n                    label=\"Email\" \n                    variant=\"outlined\" \n                    name=\"lEmail\"\n                    value={lEmail}\n                    onChange={handleLoginInputChange}\n                />\n                \n                <TextField \n                    className={classes.textField} \n                    id=\"Password\" \n                    label=\"Password\" \n                    variant=\"outlined\" \n                    type=\"password\" \n                    name=\"lPassword\"\n                    value={lPassword}\n                    onChange={handleLoginInputChange}\n                />\n                \n                \n                <Button \n                    variant=\"contained\" \n                    color=\"secondary\" \n                    className={ classes.button} \n                    type=\"submit\"\n                >\n                    Login\n                </Button> \n            </form>\n\n            <Typography \n                variant=\"overline\" \n                display=\"block\" \n                gutterBottom\n            >\n                You dont have an account? \n                <Link \n                    to=\"/register\"\n                >\n                    Register Here\n                </Link>\n            </Typography>\n        </div>\n    )\n}\n\nexport default LoginForm\n","import React from 'react'; \nimport {Grid} from \"@material-ui/core\";\nimport LoginForm from \"./LoginForm\";\n\nconst LoginScreen = () => {\n    return (\n            <Grid container>\n                <Grid item sm={4}></Grid>\n                <Grid item sm={4}>\n                    <LoginForm/>\n                </Grid>\n                <Grid item sm={4}></Grid>\n            </Grid>\n    )\n}\n\nexport default LoginScreen\n","import React from 'react'\n\nconst RegisterAnimation = () => {\n    return (\n        <div>\n            \n           <lottie-player src=\"https://assets5.lottiefiles.com/packages/lf20_jcikwtux.json\"  background=\"transparent\"  speed=\"1\"  style={{width: \"300px\", height: \"300px\"}}   loop  autoplay></lottie-player>\n        </div>\n    )\n}\n\nexport default RegisterAnimation\n","import React from 'react'; \nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport RegisterAnimation from \"../animations/RegisterAnimation\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport Swal from 'sweetalert2';\nimport { startRegister } from '../../actions/auth';\n\nconst RegisterForm = () => {\n\n    const dispatch = useDispatch();\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rName: \"\",\n        rEmail: \"\", \n        rPassword1: \"\",\n        rPassword2: \"\"\n    });  \n\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues; \n\n    const handleRegisterSubmit = (e) => {\n        e.preventDefault(); \n\n        const user = {\n            name: rName, \n            email: rEmail, \n            password: rPassword1\n        }\n\n        if(rPassword1 !== rPassword2){\n            return Swal.fire(\"Error\", \"Passwords must be the same\", \"error\");\n        }\n\n        dispatch(startRegister(user)); \n    }\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          '& > *': {\n            margin: theme.spacing(0),\n            width: '25ch',\n          },\n        },\n        button: {\n            width:\"100%\",\n            height:\"45px\",\n            margin:\"20px 0px\"\n        },\n        textField:{\n            width:\"100%\",\n            marginTop:\"20px\",\n            height:\"45px\",\n            margin:\"5px 0px\"\n        }\n        \n    }));\n\n    const classes = useStyles();\n    return (\n        <div className=\"form-reg\">\n            <RegisterAnimation/>\n            <form \n                className={classes.root} \n                noValidate \n                autoComplete=\"off\"\n                onSubmit={handleRegisterSubmit}\n            >\n                <TextField \n                    className={classes.textField} \n                    id=\"outlined-basic\" \n                    label=\"Name\" \n                    name=\"rName\"\n                    value={rName}\n                    onChange={handleRegisterInputChange}\n                    variant=\"outlined\" \n                />\n                <TextField \n                    className={classes.textField} \n                    id=\"outlined-basic\" \n                    label=\"Email\" \n                    variant=\"outlined\" \n                    name=\"rEmail\"\n                    value={rEmail}\n                    onChange={handleRegisterInputChange}\n                />\n                <TextField \n                    className={classes.textField} \n                    id=\"outlined-basic\" \n                    label=\"Password\" \n                    variant=\"outlined\" \n                    type=\"password\" \n                    name=\"rPassword1\"\n                    value={rPassword1}\n                    onChange={handleRegisterInputChange}\n                />\n                <TextField \n                    className={classes.textField} \n                    id=\"outlined-basic\" \n                    label=\"Confirm Password\" \n                    variant=\"outlined\" \n                    type=\"password\"\n                    name=\"rPassword2\"\n                    value={rPassword2}\n                    onChange={handleRegisterInputChange}\n                />\n                \n                <Button \n                    variant=\"contained\"\n                    color=\"secondary\" \n                    className={ classes.button}\n                    type=\"submit\"\n                >\n                    Register\n                </Button> \n            </form>\n\n            <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                Already Registered? <Link to=\"/login\">Login Here</Link>\n            </Typography>\n        </div>\n    )\n}\n\nexport default RegisterForm\n\n","import React from 'react'; \nimport {Grid} from \"@material-ui/core\";\nimport RegisterForm from './RegisterForm';\n\nconst RegisterScreen = () => {\n    return (\n        <Grid container>\n            <Grid item sm={4}></Grid>\n            <Grid item sm={4} >\n                <RegisterForm/>\n            </Grid>\n            <Grid item sm={4}></Grid>\n\n        </Grid>\n    )\n}\n\nexport default RegisterScreen\n","import {types} from \"../types/types\"; \nimport {fetchWithToken } from \"../helpers/fetch\"\nimport Swal from \"sweetalert2\";\nimport { userStartLoadingPosts } from \"./user\";\n\n\nexport const postStartLoading = () => {\n\n    return async(dispatch) => {\n        try {\n            const resp = await fetchWithToken(\"posts\"); \n            const body = await resp.json(); \n\n            const posts = body; \n            dispatch(postLoaded(posts.posts));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const postStartUploading = (post) => {\n    return async(dispatch, getState) => {\n\n        const {uid, name} = getState().auth;\n        try {\n            const resp = await fetchWithToken(\"posts\", post, \"POST\"); \n            const body = await resp.json(); \n\n            if(body.success){\n                post.id = body.post.id; \n                post.user = {\n                    _id: uid, \n                    name: name\n                }\n\n                Swal.fire(\"Success\", \"Post was saved\", \"success\");\n                dispatch(postUploading(post));\n                dispatch(userStartLoadingPosts());\n            }else{\n                return Swal.fire(\"Error\", body.message, \"error\"); \n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst postUploading = (post) => ({\n    type: types.postUploading, \n    payload: post\n}); \n\n\nconst postLoaded = (posts) => ({\n    type: types.postsLoaded, \n    payload: posts\n}); \n\n\nexport const userPostEditLoading = (id) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchWithToken(`posts/edit/${id}`); \n            const body = await resp.json(); \n\n            if(body.success){\n                dispatch(postSetActive(body.post));\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\n\n\nexport const postSetActive = (post) => ({\n    type: types.postSetActive, \n    payload: post\n})\n\nexport const postClearActive = () => ({\n    type: types.postClearActive\n})","import { makeStyles } from '@material-ui/core';\nimport React from 'react'; \n\n\nconst useStyles = makeStyles({\n    root: {\n        display:\"flex\",\n        justifyContent:\"center\", \n        alignItems: \"center\", \n        height:\"100vh\" \n    }\n}); \n\nconst Loader = () => {\n\n    const classes = useStyles(); \n\n    return (\n        <div className={classes.root}>\n            <lottie-player src=\"https://assets8.lottiefiles.com/packages/lf20_iy2i0ky0.json\" mode=\"bounce\" background=\"transparent\"  speed=\"3\"   style={{width: \"300px\", height: \"300px\"}}  loop  autoplay></lottie-player>\n        </div>\n    )\n}\n\nexport default Loader\n","import { Button, Card, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core'\nimport React from 'react'\nimport moment from \"moment\"; \nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { postSetActive } from '../../actions/posts';\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 300,\n      margin:\"10px\",\n      height:\"100%\"\n    },\n    posted: {\n        margin: \"10px 0px\"\n    },\n    btnMore: {\n        display:\"flex\",\n        justifyContent:\"flex-end\"\n    }, \n    btnStyle: {\n        backgroundColor:\"#ccc\", \n        padding: \"10px\", \n        borderRadius:\"10%\",\n        color:\"#333\", \n        textDecoration:\"none\",\n        fontFamily:\"roboto\", \n        fontSize:\"12px\",\n        textTransform:\"capitalize\"\n    }\n\n});\nconst PostItem = (props) => {\n\n    const dispatch = useDispatch(); \n\n    let history = useHistory();\n    const {post} = props;\n\n    const classes = useStyles();\n\n    const handlePostDetails = () => {\n        dispatch(postSetActive(post)); \n        history.push(`/post/${post.id}`); \n    }\n\n    return (\n        <div>\n            <Card className={classes.root}>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"150\"\n                    image={`${post.image}`}\n                    title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {post.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {post.description}\n                    </Typography>\n\n                    <Typography className={classes.posted} variant=\"caption\" display=\"block\" gutterBottom>\n                        Posted on {moment(post.posted).format('DD/MM/YYYY HH:mm')} by {post.user.name}\n                    </Typography>\n\n                    <div className={classes.btnMore}>\n                         <Button \n                            className={classes.btnStyle}\n                            onClick={handlePostDetails}\n                        >\n                            Ver mas\n                        </Button> \n\n                        \n                    </div>\n                    \n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nexport default PostItem\n","import { makeStyles } from '@material-ui/core';\nimport React, {useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postStartLoading } from '../../actions/posts';\nimport Loader from '../ui/Loader';\nimport PostItem from './PostItem'; \n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor:\"tranparent\",\n        display:\"flex\", \n        justifyContent:\"center\", \n        alignItems:\"center\", \n        height:\"100vh\", \n        flexWrap:\"wrap\",\n        margin:\"3.3rem\"\n    },\n\n});\n\nconst Posts = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(postStartLoading()); \n    }, [dispatch])\n\n    const classes = useStyles();\n    const {posts} = useSelector(state => state.post); \n\n    if(posts.length === 0){\n        return <Loader/>\n    }\n\n    return (\n        <>  \n            \n            <div className={classes.root}>\n                {posts.map( post => {\n                    return <PostItem key={post.id} post={post}/>\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default Posts\n","import React from 'react'\nimport Posts from './Posts'\n\nconst HomeScreen = ({history}) => {\n    return (\n        <div>\n            <Posts/>\n        </div>\n    )\n}\n\nexport default HomeScreen\n","import React from 'react'; \nimport { Card, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport moment from \"moment\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst useStyles = makeStyles({\n    root: {\n    }, \n    container: {\n        display:\"flex\", \n        justifyContent:\"center\", \n        alignItems:\"\", \n        height:\"100%\", \n        marginTop:\"2rem\" \n    }, \n    mediaImg: {\n        border:\"0 solid #333\"\n    }, \n    goBackLink:{\n        position:\"absolute\", \n        textTransform:\"uppercase\", \n        textDecoration:\"none\", \n        color:\"#333\", \n        left:\"10px\",\n        margin: \"-25px 0px\"\n    }\n}); \n\nconst PostDetails = ({history}) => {\n    const classes = useStyles(); \n\n    const {activePost:postSelected} = useSelector(state => state.post); \n\n    if(postSelected === null){\n        history.push(\"/\");\n    }\n    \n    return (\n        <div className={classes.container}>\n            <Link \n                to=\"/\"\n                className={classes.goBackLink}\n            >\n                <ArrowBackIcon/>\n            </Link>\n            <Card className={classes.root}>\n                <CardMedia\n                        component=\"img\"\n                        alt=\"Contemplative Reptile\"\n                        height=\"300\"\n                        image={`${postSelected.image}`}\n                        title=\"Contemplative Reptile\"\n                        className={classes.mediaImg}\n                />\n                \n                <CardContent>\n                    <Typography \n                        variant=\"h4\"\n                    >\n                        {postSelected.title}\n                    </Typography>\n\n                    <Typography \n                        variant=\"body2\" \n                        component=\"p\"\n                    >\n                        {postSelected.description}\n                    </Typography>\n\n                    <Typography \n                        variant=\"overline\" \n                        component=\"p\"\n                    >\n                        Posted {(moment(postSelected.posted).fromNow())}  by {postSelected.user.name}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nexport default PostDetails","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PrivateRoute = ({\n    isAuthenticated, \n    component: Component, \n    ...rest\n}) => {\n    \n    \n    return (\n        <Route {...rest}\n            component={ (props) => (\n                (isAuthenticated)\n                    ? <Component {...props} />\n                    : (<Redirect to=\"/login\"/>)\n            )}\n        />\n    )\n}\n\nexport default PrivateRoute\n\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired, \n    component: PropTypes.func.isRequired\n}","import React from 'react'; \nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PublicRoute = ({\n    isAuthenticated, \n    component: Component, \n    ...rest\n}) => {\n\n        \n        return (\n            <Route {...rest}\n                component={ (props) => (\n                    (!isAuthenticated)\n                        ? <Component {...props} />\n                        : (<Redirect to=\"/\"/>)\n                )}\n            />\n        )\n    \n}\n\nexport default PublicRoute\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired, \n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { useHistory } from \"react-router-dom\";\nimport {Link} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        boxShadow: \"none\",\n        backgroundColor: \"#333\" \n      \n    }, \n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    titleAuth: {\n        margin: \"0px 10px\"\n    }, \n    linkTitle:{\n      color:\"white\", \n      textDecoration:\"none\"\n    } \n  }));\n\nconst Navbar = () => {\n\n    let history = useHistory();\n\n    const {uid} = useSelector(state => state.auth); \n\n    const dispatch = useDispatch(); \n    const {name} = useSelector(state => state.auth); \n\n    const classes = useStyles();\n\n\n    const handleNewPost = () =>{\n      history.push(\"/posts/new\");\n    }\n\n    const handleProfile = () => {\n      history.push(\"/profile\");\n    }\n\n    const handleLogout = () => {\n      dispatch(startLogout());\n    }\n    return (\n    <>\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar>\n\n          <Typography \n              className={classes.title} \n              variant=\"overline\" \n              display=\"block\" \n              >\n                <Link to=\"/\" className={classes.linkTitle}>\n                  Post OwnBlog\n                </Link>\n          </Typography>\n\n          {uid ? (\n            <>\n              <Button \n              display=\"block\" \n              color=\"inherit\"\n              onClick={handleProfile}\n              >Profile</Button>\n\n              <Button \n              display=\"block\" \n              color=\"inherit\"\n              onClick={handleNewPost}\n              >New Post</Button>\n\n              <Button \n              display=\"block\" \n              color=\"inherit\"\n              onClick={handleLogout}\n              >Logout</Button>\n\n              <Typography className={classes.titleAuth} variant=\"overline\" display=\"block\" gutterBottom >\n              | Hola {name} \n              </Typography>\n            </>\n          ): null}\n\n         \n\n          \n\n          \n        </Toolbar>\n      </AppBar>\n    </>\n    )\n}\n\nexport default Navbar\n","import { Button, makeStyles, TextField } from '@material-ui/core'\nimport React, {useState} from 'react'; \nimport { useDispatch } from 'react-redux';\nimport { postStartUploading } from '../../actions/posts';\nimport { fetchImageWithoutToken } from '../../helpers/fetch';\nimport { useForm } from '../../hooks/useForm';\nimport { useHistory } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\n\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        background:\"\", \n        width:\"50%\", \n        padding:\"10px\",\n        display:\"flex\", \n        [theme.breakpoints.down(\"xs\")]: {\n            width:\"100%\"\n        },\n    }, \n    form:{\n        display:\"flex\", \n        justifyContent:\"center\",\n        width:\"100%\",\n        flexDirection:\"column\", \n        backgroundColor:\"#ccc\", \n        padding:\"0rem\"\n    }, \n    textField: {\n        backgroundColor:\"\",\n        width:\"100%\", \n        margin:\"1rem 0rem\"\n    }\n}));\n\nconst NewPostForm = () => {\n\n    let history = useHistory();\n\n    const dispatch = useDispatch(); \n\n    const [uploadingImage, setUploadingImage] = useState(false); \n    const [imageUrl, setImageUrl] = useState(\"\"); \n    const classes = useStyles(); \n\n    const [formNewPostValues, handleNewPostInputChange] = useForm({\n        title: \"\", \n        description: \"\"\n    }); \n\n    const {title, description} = formNewPostValues; \n\n    const handleUploadImage = async (e) => {\n        const file = e.target.files[0]; \n        setUploadingImage(true);\n        \n        \n\n        try {\n            const resp = await fetchImageWithoutToken(\"uploadImage\",file,\"POST\"); \n            const body = await resp.json(); \n            \n\n            if(body.success){\n                setUploadingImage(false); \n                setImageUrl(`${process.env.REACT_APP_API_IMAGE_URL}${body.imagePath}`); \n                //console.log(); \n            }\n        } catch (error) {\n            console.log(\"imagen no fue subida\");\n            console.log(error);\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); \n\n\n        let posted = new Date().toISOString().slice(0, 16).replace('T', ' ');\n        let image = imageUrl;\n        \n        if(!title || !description || !image){\n            Swal.fire(\"Error\", \"Please Complete all the fields\", \"error\");\n            return;\n        }\n\n        let post = {\n            title, \n            description,\n            posted,\n            image\n        }\n\n        dispatch(postStartUploading(post));\n        history.push(\"/profile\");\n    }\n    return (\n        <>\n            <div\n                className={classes.formContainer}\n            >\n                <form \n                    className={classes.form}\n                    onSubmit={handleSubmit}\n                >\n                    <TextField\n                        className={classes.textField} \n                        id=\"title\" \n                        label=\"Title\" \n                        variant=\"outlined\" \n                        name=\"title\"\n                        value={title}\n                        onChange={handleNewPostInputChange}\n                    />\n\n                    <TextField\n                        className={classes.textField} \n                        id=\"description\" \n                        label=\"Description\" \n                        variant=\"outlined\" \n                        name=\"description\"\n                        multiline\n                        rows={10}\n                        value={description}\n                        onChange={handleNewPostInputChange}\n                    />\n\n                    <Button\n                        className={classes.textField} \n                        variant=\"outlined\"\n                        component=\"label\"\n                    >\n                        Upload Image\n                        <input\n                            onChange={handleUploadImage}\n                            type=\"file\"\n                            hidden\n                        />\n                        \n                    </Button>\n                    {uploadingImage && \"Cargando imagen...\"}\n                    {imageUrl && <a href={imageUrl} target=\"_blank\" rel=\"noreferrer\">{imageUrl}</a>}\n                    \n\n                    <Button\n                        className={classes.textField} \n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                    >\n                        Save Post\n                    </Button>\n\n\n                </form>\n            </div>\n        </>\n\n    )\n}\n\nexport default NewPostForm\n","import { makeStyles, Typography } from '@material-ui/core';\nimport React from 'react'; \nimport NewPostForm from './NewPostForm';\n\nconst useStyle = makeStyles({\n    newPostContainer: {\n        display:\"flex\", \n        backgroundColor:\"\", \n        height:\"100%\", \n        justifyContent:\"center\",\n        alignItems:\"center\", \n        flexDirection:\"column\",\n        margin:\"2rem 0rem\"\n    }, \n    titleContainer: {\n        margin:\"25px 0px\", \n        textTransform:\"uppercase\", \n        fontWeight:\"lighter\"\n    }\n}); \n\nconst NewPost = () => {\n\n    const classes = useStyle(); \n\n    return (\n        <div className={classes.newPostContainer}>\n            <Typography variant=\"h5\" className={classes.titleContainer}>\n                New Post\n            </Typography>\n\n            <NewPostForm/>\n\n        </div>\n    )\n}\n\nexport default NewPost\n","import { Button, CardMedia, makeStyles, TableCell, TableRow } from '@material-ui/core'\nimport React from 'react'; \nimport moment from \"moment\"; \nimport Swal from 'sweetalert2';\nimport { useDispatch } from 'react-redux';\nimport { postSetActive } from '../../actions/posts';\nimport { postStartDeleting } from '../../actions/user';\n\n\nconst useStyles = makeStyles({\n    tableImage: {\n        width:\"50px\"\n    }\n}); \n\nconst PostUserItems = ({post, history}) => {\n    const classes = useStyles(); \n    const dispatch = useDispatch();\n\n    const handleEditPost = (id) => {\n        dispatch(postSetActive(post)); \n        history.push(`/post/edit/${id}`);\n    }\n\n    const handleDeletePost = (id) => {\n\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(postStartDeleting(id));\n            }\n          })\n    }\n\n\n    return (\n\n        <>\n        <TableRow>\n            <TableCell> {post.title}</TableCell>\n            <TableCell> {(moment(post.posted).fromNow())} </TableCell>\n            <TableCell> \n            <CardMedia\n                    component=\"img\"\n                    alt=\"Post detail\"\n                    width=\"25\"\n                    height=\"25\"\n                    image={`${post.image}`}\n                    title=\"Post detail\"\n                    className={classes.tableImage}\n                />\n            </TableCell>\n            <TableCell>\n                <Button\n                    onClick={() => handleEditPost(post.id)}\n                >Edit</Button>\n                <Button\n                    onClick={() => handleDeletePost(post.id)}\n                >Delete</Button>\n            </TableCell>\n        </TableRow>\n        </>\n    )\n}\n\nexport default PostUserItems\n","import { Button, makeStyles, TextField } from '@material-ui/core';\nimport React, {useEffect, useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { userDetailsStartUpdating, userStartLoadingDetails } from '../../actions/user';\nimport Swal from 'sweetalert2';\n\n\nconst useStyles = makeStyles({\n    profileScreenContainer: {\n        display:\"flex\", \n        backgroundColor:\"\", \n        justifyContent:\"center\"\n    }, \n    titleProfileScreen: {\n        margin:\"2rem 0rem\"\n    }, \n    dataPostContainer: {\n        display:\"flex\", \n        justifyContent:\"space-around\", \n        margin:\"1rem 0rem\", \n        backgroundColor:\"\"\n    }, \n    titlesPostData:{\n        fontWeight:\"lighter\", \n        margin:\"1rem 0rem\"\n    }, \n    myDataContainer:{\n        display:\"flex\", \n        flexDirection:\"column\", \n        backgroundColor:\"\"\n    }, \n    myDataTextField:{\n        margin:\".5rem 0rem\"\n    }, \n    formData:{\n        backgroundColor:\"\", \n        width:\"45%\"\n    }, \n    tableDataD:{\n        width:\"45%\"\n    },\n    tableData:{\n        fontFamily:\"arial\", \n        border:\"1px solid #333\"\n    }\n}); \n\nconst UpdateUserForm = () => {\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const {userDetails} = useSelector(state => state.userDetails);\n\n    useEffect(() => {\n        if(Object.keys(userDetails).length === 0){\n            dispatch(userStartLoadingDetails());\n        }\n    }, [dispatch, userDetails]);\n\n    const [state, setstate] = useState(userDetails); \n    \n    useEffect(() => {\n        setstate(userDetails); \n    }, [userDetails]);\n\n    const handleInputChange = (event) => {\n        setstate({\n            ...state,\n            [event.target.name] : event.target.value\n        })\n    }\n\n    const handleUpdateUser = (e) => {\n        e.preventDefault(); \n\n        const {name, email, password, password2} = state; \n\n        if(password !== password2){\n            Swal.fire(\"Error\", \"Password must be the same\", \"error\"); \n            return;\n        }\n\n        if(!name || !email){\n            Swal.fire(\"Error\", \"Please complete all the fields\", \"error\"); \n            return;\n        }\n\n        const user = {\n            name, \n            email, \n            password, \n            id: state._id\n        }\n\n        dispatch(userDetailsStartUpdating(user));\n        //console.log(\"Actualizando\");\n    }\n    return (\n        <div>\n            { Object.keys(userDetails).length > 0 ? (\n            <form\n            className={classes.myDataContainer}\n            onSubmit={handleUpdateUser}\n        >\n                    <TextField\n                        className={classes.myDataTextField} \n                        id=\"name\" \n                        label=\"\" \n                        variant=\"outlined\" \n                        name=\"name\"\n                        value={state.name}\n                        onChange={handleInputChange}\n                    />\n\n                    <TextField\n                        id=\"email\" \n                        variant=\"outlined\" \n                        label=\"\"\n                        name=\"email\"\n                        className={classes.myDataTextField}\n                        value={state.email}\n                        onChange={handleInputChange}\n                    />\n\n                    <TextField\n                        id=\"password\" \n                        label=\"Password\" \n                        variant=\"outlined\" \n                        name=\"password\"\n                        className={classes.myDataTextField}\n                        value={state.password}\n                        type=\"password\"\n                        onChange={handleInputChange}\n                    />\n\n                    <TextField\n                        id=\"password2\" \n                        label=\"Confirm Password\" \n                        variant=\"outlined\" \n                        name=\"password2\"\n                        type=\"password\"\n                        className={classes.myDataTextField}\n                        value={state.password2}\n                        onChange={handleInputChange}\n                    />\n\n                    <Button\n                        variant=\"outlined\"\n                        type=\"submit\"\n                    >\n                        Save\n                    </Button>\n\n                    \n                </form>\n            ) : \"Cargando...\"}\n\n        </div>\n    )\n}\n\nexport default UpdateUserForm\n","import { makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core'\nimport React, { useEffect } from 'react'; \nimport { useDispatch, useSelector } from 'react-redux';\nimport { userStartLoadingPosts } from '../../actions/user';\nimport PostUserItems from './PostUserItems';\nimport UpdateUserForm from './UpdateUserForm';\n\nconst useStyles = makeStyles({\n    profileScreenContainer: {\n        display:\"flex\", \n        backgroundColor:\"\", \n        justifyContent:\"center\"\n    }, \n    titleProfileScreen: {\n        margin:\"2rem 0rem\"\n    }, \n    dataPostContainer: {\n        display:\"flex\", \n        justifyContent:\"space-around\", \n        margin:\"1rem 0rem\", \n        backgroundColor:\"\"\n    }, \n    titlesPostData:{\n        fontWeight:\"lighter\", \n        margin:\"1rem 0rem\"\n    }, \n    myDataContainer:{\n        display:\"flex\", \n        flexDirection:\"column\", \n        backgroundColor:\"\"\n    }, \n    myDataTextField:{\n        margin:\".5rem 0rem\"\n    }, \n    formData:{\n        backgroundColor:\"\", \n        width:\"45%\"\n    }, \n    tableDataD:{\n        width:\"45%\"\n    },\n    tableData:{\n        fontFamily:\"arial\", \n        border:\"1px solid #333\"\n    }\n}); \n\nconst ProfileScreen = ({history}) => {\n\n    const classes = useStyles();\n    const dispatch = useDispatch(); \n\n    const {userPosts} = useSelector(state => state.userDetails);\n    \n    useEffect(() => {\n\n        if(userPosts.length === 0){\n            dispatch(userStartLoadingPosts());\n        }\n        \n    }, [dispatch, userPosts]); \n\n\n\n    \n    return (\n        <>\n        <div\n            className={classes.profileScreenContainer}\n        >\n            <Typography \n                variant=\"h5\"\n                className={classes.titleProfileScreen}\n            >\n                PROFILE\n            </Typography>\n        </div>\n\n        <div \n            className={classes.dataPostContainer}\n        >\n                <div \n                    className={classes.formData}\n                >\n                    <Typography \n                        variant=\"h6\" \n                        className={classes.titlesPostData}\n                    > \n                        MY DATA\n                    </Typography>\n\n                    <UpdateUserForm/>\n                </div>\n\n                <div\n                    className={classes.tableDataD}\n                >\n                    <Typography \n                        variant=\"h6\"\n                        className={classes.titlesPostData}\n                    > \n                        MY POSTS\n                    </Typography>\n\n                    \n\n\n                    <TableContainer\n                        component={Paper}\n                    >\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell> Title </TableCell>\n                                    <TableCell> Date Posted </TableCell>\n                                    <TableCell> Image </TableCell>\n                                    <TableCell> Actions </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                    {userPosts.map( post => {\n                                        return <PostUserItems post={post} key={post.id} history={history} />\n                                    })}\n                            </TableBody>\n\n                        </Table>\n\n                    </TableContainer>\n                </div>\n        </div>\n        </>\n    )\n}\n\nexport default ProfileScreen\n","import { Button,makeStyles, TextField } from '@material-ui/core'\nimport React, {useState} from 'react'; \nimport { useDispatch } from 'react-redux';\nimport {postStartUpdating} from \"../../actions/user\"; \nimport { fetchImageWithoutToken } from '../../helpers/fetch';\nimport { useForm } from '../../hooks/useForm';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport Loader from '../ui/Loader';\nimport Swal from 'sweetalert2';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        background:\"\", \n        width:\"50%\", \n        padding:\"10px\",\n        display:\"flex\", \n        [theme.breakpoints.down(\"xs\")]: {\n            width:\"100%\"\n        },\n    }, \n    form:{\n        display:\"flex\", \n        justifyContent:\"center\",\n        width:\"100%\",\n        flexDirection:\"column\", \n        backgroundColor:\"#ccc\", \n        padding:\"0rem\"\n    }, \n    textField: {\n        backgroundColor:\"\",\n        width:\"100%\", \n        margin:\"1rem 0rem\"\n    }\n}));\n\nconst EditPostForm = () => {\n    \n    const dispatch = useDispatch(); \n    const classes = useStyles();\n\n    let history = useHistory();\n\n    \n    const [uploadingImage, setUploadingImage] = useState(false); \n    const [imageUrl, setImageUrl] = useState(\"\"); \n\n\n    const {activePost} = useSelector(state => state.post); \n\n    if(activePost === null){\n        history.push(\"/profile\");\n    }\n\n    const [formNewPostValues, handleNewPostInputChange] = useForm({\n        title: activePost ? activePost.title : \"\",\n        description: activePost ? activePost.description : \"\"\n    }); \n\n    const {title, description} = formNewPostValues; \n\n    const handleUploadImage = async (e) => {\n        const file = e.target.files[0]; \n        setUploadingImage(true); \n\n        try {\n            const resp = await fetchImageWithoutToken(\"uploadImage\",file,\"POST\"); \n            const body = await resp.json(); \n\n            if(body.success){\n                setUploadingImage(false); \n                setImageUrl(`${process.env.REACT_APP_API_IMAGE_URL}${body.imagePath}`);\n                \n                \n                //console.log(); \n            }\n        } catch (error) {\n            console.log(\"imagen no fue subida\");\n            console.log(error);\n        }\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); \n\n        const post = {\n            id: activePost.id,\n            title, \n            description,\n            image: imageUrl ? imageUrl : activePost.image\n        }\n\n        if(!post.title || !post.description || !post.image){\n            Swal.fire(\"Error\", \"Please Complete all the fields\", \"error\");\n            return;\n        }\n\n        dispatch(postStartUpdating(post)); \n        history.push(\"/profile\");\n    }\n    return (\n        <>\n        {true ? (\n            <div\n                className={classes.formContainer}\n            >\n                \n                    <form \n                        className={classes.form}\n                        onSubmit={handleSubmit}\n                    >\n                    <TextField\n                        className={classes.textField} \n                        id=\"title\" \n                        label=\"Title\" \n                        variant=\"outlined\" \n                        name=\"title\"\n                        value={title}\n                        onChange={handleNewPostInputChange}\n                    />\n\n                    <TextField\n                        className={classes.textField} \n                        id=\"description\" \n                        label=\"\" \n                        variant=\"outlined\" \n                        name=\"description\"\n                        multiline\n                        rows={10}\n                        value={description}\n                        onChange={handleNewPostInputChange}\n                    />\n\n                    <Button\n                        className={classes.textField} \n                        variant=\"outlined\"\n                        component=\"label\"\n                    >\n                        Upload Image\n                        <input\n                            onChange={handleUploadImage}\n                            type=\"file\"\n                            hidden\n                        />\n                        \n                    </Button>\n                    {uploadingImage && \"Cargando imagen...\"}\n                    {/* {imageUrl ? \"Hay foto\" : \"No hay foto\"} */}\n                    {imageUrl && `New Image: ${imageUrl}` }\n                    { activePost ? <a href={activePost.image} target=\"_blank\" rel=\"noreferrer\">{activePost.image}</a> : \"\"} \n                    {/* {postSelected && <a href={postSelected.image} target=\"_blank\">{postSelected.image}</a>} */}\n                    \n\n                    <Button\n                        className={classes.textField} \n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                    >\n                        Edit Post\n                    </Button>\n\n\n                </form>\n                \n                \n            </div>\n            ) : <Loader/>}\n        </>\n\n    )\n}\n\nexport default EditPostForm\n","import { makeStyles, Typography } from '@material-ui/core';\nimport React from 'react'; \nimport EditPostForm from './EditPostForm';\n\nconst useStyle = makeStyles({\n    newPostContainer: {\n        display:\"flex\", \n        backgroundColor:\"\", \n        height:\"100%\", \n        justifyContent:\"center\",\n        alignItems:\"center\", \n        flexDirection:\"column\",\n        margin:\"2rem 0rem\"\n    }, \n    titleContainer: {\n        margin:\"25px 0px\", \n        textTransform:\"uppercase\", \n        fontWeight:\"lighter\"\n    }\n}); \n\nconst PostEdit = ({match}) => {\n    const classes = useStyle(); \n\n    return (\n        <div className={classes.newPostContainer}>\n            <Typography variant=\"h5\" className={classes.titleContainer}>\n                Edit Post\n            </Typography>\n\n            <EditPostForm id={match.params.id}/>\n\n        </div>\n    )\n}\n\nexport default PostEdit\n\n ","import React, {useEffect} from 'react'; \nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\nimport LoginScreen from '../components/auth/LoginScreen';\nimport RegisterScreen from '../components/auth/RegisterScreen';\nimport HomeScreen from '../components/blog/HomeScreen';\nimport PostDetails from '../components/blog/PostDetails';\nimport Loader from '../components/ui/Loader';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\nimport Navbar from '../components/ui/Navbar';\nimport NewPost from '../components/blog/NewPost';\nimport ProfileScreen from '../components/blog/ProfileScreen';\nimport PostEdit from '../components/blog/PostEdit';\n\n\nconst AppRouter = () => {\n    const dispatch = useDispatch(); \n\n    const {checking, uid} = useSelector(state => state.auth); \n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch])\n\n\n    if(checking){\n        return <Loader/>;\n    }\n\n    return (\n        <Router>\n            <div>\n                <Navbar/>\n                <Switch>\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={LoginScreen}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <PublicRoute \n                        exact \n                        path=\"/register\" \n                        component={RegisterScreen}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={HomeScreen}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <PrivateRoute  \n                        exact\n                        path=\"/post/:id\" \n                        component={PostDetails}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <PrivateRoute  \n                        exact\n                        path=\"/posts/new\" \n                        component={NewPost}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <PrivateRoute\n                        exact\n                        path=\"/profile\"\n                        component={ProfileScreen}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <PrivateRoute  \n                        exact\n                        path=\"/post/edit/:id\" \n                        component={PostEdit}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <Redirect to=\"/\"/>\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default AppRouter\n","import {types} from \"../types/types\";\n\nconst initialState = {\n    checking: true, \n    uid: null, \n    name: null\n}\n\nexport const authReducer = (state=initialState, action) =>{\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking:false\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state, \n                checking: false\n            }\n        case types.authLogout: \n            return {\n                checking:false\n            }\n    \n        default:\n            return state;\n    }\n}","import {types} from \"../types/types\"; \n\n\nconst initialState = {\n    posts: [], \n    activePost: null\n}\n\nexport const postReducer = (state=initialState, action) => {\n\n    switch (action.type) {\n        case types.postsLoaded: \n            return {\n                ...state, \n                posts: [...action.payload]\n            }\n        case types.postSetActive: \n            return{\n                ...state, \n                activePost: action.payload\n            }\n        case types.postClearActive:\n            return {\n                ...state, \n                activePost: {}\n            }\n        case types.postUploading: \n            return {\n                ...state, \n                posts: [\n                    ...state.posts, \n                    action.payload\n                ]\n            }\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    userDetails: {}, \n    userPosts: []\n}\n\nexport const userReducer = (state=initialState, action ) => {\n    switch (action.type) {\n        case types.userLoadingDetails:\n            return{\n                ...state, \n                userDetails: action.payload\n            }\n        case types.userLoadingPosts: \n            return {\n                ...state, \n                userPosts: action.payload\n            }\n        case types.postUpdating: \n            return {\n                ...state, \n                userPosts: state.userPosts.map(\n                    p => (p.id === action.payload.id) ? action.payload : p\n                )\n            }\n        case types.postDeleting: \n            return {\n                ...state, \n                userPosts: state.userPosts.filter(\n                    p => (p.id !== action.payload)\n                )\n            }\n        case types.userClearDetails:\n            return {\n                ...state, \n                ...initialState\n            }\n    \n        default:\n            return state; \n    }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { postReducer } from \"./postReducer\";\nimport { userReducer } from \"./userReducer\";\n\n\nexport const rootReducer = combineReducers({\n    auth: authReducer, \n    post: postReducer, \n    userDetails: userReducer\n}); ","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","import React from 'react'\nimport AppRouter from './routers/AppRouter';\nimport {Provider} from \"react-redux\"; \nimport { store } from './store/store';\n\nconst BlogApp = () => {\n    return (\n        <Provider \n            store={store}\n        >\n            <AppRouter/>\n        </Provider>\n    )\n}\n\nexport default BlogApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BlogApp from \"./BlogApp\";\nimport \"../src/style.css\";\n\n\nReactDOM.render(\n    <BlogApp/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}